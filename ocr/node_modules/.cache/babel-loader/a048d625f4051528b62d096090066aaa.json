{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Adrian\\\\Desktop\\\\THE PROJECTS\\\\OCR Online\\\\ocr\\\\src\\\\Components\\\\DropzoneContainer.js\",\n    _s = $RefreshSig$();\n\nimport Dropzone from 'react-dropzone';\nimport React, { useCallback } from 'react';\nimport { Container } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DropzoneContainer() {\n  _s();\n\n  const onDrop = useCallback(acceptedFiles => {\n    acceptedFiles.forEach(file => {\n      const reader = new FileReader();\n\n      reader.onabort = () => console.log('file reading was aborted');\n\n      reader.onerror = () => console.log('file reading has failed');\n\n      reader.onload = () => {\n        // Do whatever you want with the file contents\n        const binaryStr = reader.result;\n        console.log(binaryStr);\n      };\n\n      reader.readAsArrayBuffer(file);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    style: {\n      height: \"70vh\",\n      width: \"70vh\",\n      border: \"2px dotted white\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Dropzone, {\n      onDrop: onDrop,\n      children: ({\n        getRootProps,\n        getInputProps\n      }) => /*#__PURE__*/_jsxDEV(\"section\", {\n        style: {\n          height: \"100%\",\n          width: \"100%\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            height: \"100%\",\n            width: \"100%\",\n            position: \"relative\"\n          },\n          ...getRootProps(),\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            style: {\n              height: \"100%\",\n              width: \"100%\"\n            },\n            ...getInputProps()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              position: \"absolute\",\n              top: \"40%\"\n            },\n            children: \"Drag 'n' drop some files here, or click to select files\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 12\n  }, this);\n}\n\n_s(DropzoneContainer, \"jxJjeNCcTCma4EZ46I3/YMvQ3sw=\");\n\n_c = DropzoneContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"DropzoneContainer\");","map":{"version":3,"sources":["C:/Users/Adrian/Desktop/THE PROJECTS/OCR Online/ocr/src/Components/DropzoneContainer.js"],"names":["Dropzone","React","useCallback","Container","DropzoneContainer","onDrop","acceptedFiles","forEach","file","reader","FileReader","onabort","console","log","onerror","onload","binaryStr","result","readAsArrayBuffer","height","width","border","getRootProps","getInputProps","position","top"],"mappings":";;;AAAA,OAAOA,QAAP,MAAqB,gBAArB;AACA,OAAOC,KAAP,IAAeC,WAAf,QAAiC,OAAjC;AACA,SAASC,SAAT,QAA0B,iBAA1B;;AACA,eAAe,SAASC,iBAAT,GACf;AAAA;;AACI,QAAMC,MAAM,GAAGH,WAAW,CAAEI,aAAD,IAAmB;AAC1CA,IAAAA,aAAa,CAACC,OAAd,CAAuBC,IAAD,IAAU;AAC9B,YAAMC,MAAM,GAAG,IAAIC,UAAJ,EAAf;;AAEAD,MAAAA,MAAM,CAACE,OAAP,GAAiB,MAAMC,OAAO,CAACC,GAAR,CAAY,0BAAZ,CAAvB;;AACAJ,MAAAA,MAAM,CAACK,OAAP,GAAiB,MAAMF,OAAO,CAACC,GAAR,CAAY,yBAAZ,CAAvB;;AACAJ,MAAAA,MAAM,CAACM,MAAP,GAAgB,MAAM;AACtB;AACE,cAAMC,SAAS,GAAGP,MAAM,CAACQ,MAAzB;AACAL,QAAAA,OAAO,CAACC,GAAR,CAAYG,SAAZ;AACD,OAJD;;AAKAP,MAAAA,MAAM,CAACS,iBAAP,CAAyBV,IAAzB;AACD,KAXD;AAaD,GAduB,EAcrB,EAdqB,CAA1B;AAiBA,sBAAO,QAAC,SAAD;AAAW,IAAA,KAAK,EAAE;AAACW,MAAAA,MAAM,EAAC,MAAR;AAAeC,MAAAA,KAAK,EAAC,MAArB;AAA4BC,MAAAA,MAAM,EAAC;AAAnC,KAAlB;AAAA,2BACP,QAAC,QAAD;AAAU,MAAA,MAAM,EAAEhB,MAAlB;AAAA,gBAEE,CAAC;AAACiB,QAAAA,YAAD;AAAeC,QAAAA;AAAf,OAAD,kBACA;AAAS,QAAA,KAAK,EAAE;AAACJ,UAAAA,MAAM,EAAC,MAAR;AAAeC,UAAAA,KAAK,EAAC;AAArB,SAAhB;AAAA,+BACE;AAAK,UAAA,KAAK,EAAE;AAACD,YAAAA,MAAM,EAAC,MAAR;AAAeC,YAAAA,KAAK,EAAC,MAArB;AAA4BI,YAAAA,QAAQ,EAAC;AAArC,WAAZ;AAAA,aAAkEF,YAAY,EAA9E;AAAA,kCACE;AAAQ,YAAA,KAAK,EAAE;AAACH,cAAAA,MAAM,EAAC,MAAR;AAAeC,cAAAA,KAAK,EAAC;AAArB,aAAf;AAAA,eAAiDG,aAAa;AAA9D;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAG,YAAA,KAAK,EAAE;AAACC,cAAAA,QAAQ,EAAC,UAAV;AAAqBC,cAAAA,GAAG,EAAC;AAAzB,aAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAHF;AAAA;AAAA;AAAA;AAAA;AADO;AAAA;AAAA;AAAA;AAAA,UAAP;AAaH;;GAhCuBrB,iB;;KAAAA,iB","sourcesContent":["import Dropzone from 'react-dropzone'\r\nimport React, {useCallback} from 'react'\r\nimport { Container } from 'react-bootstrap'\r\nexport default function DropzoneContainer()\r\n{\r\n    const onDrop = useCallback((acceptedFiles) => {\r\n        acceptedFiles.forEach((file) => {\r\n          const reader = new FileReader()\r\n    \r\n          reader.onabort = () => console.log('file reading was aborted')\r\n          reader.onerror = () => console.log('file reading has failed')\r\n          reader.onload = () => {\r\n          // Do whatever you want with the file contents\r\n            const binaryStr = reader.result\r\n            console.log(binaryStr)\r\n          }\r\n          reader.readAsArrayBuffer(file)\r\n        })\r\n        \r\n      }, [])\r\n\r\n\r\n    return <Container style={{height:\"70vh\",width:\"70vh\",border:\"2px dotted white\"}}>\r\n    <Dropzone onDrop={onDrop}>\r\n    {\r\n      ({getRootProps, getInputProps}) => (\r\n      <section style={{height:\"100%\",width:\"100%\"}}>\r\n        <div style={{height:\"100%\",width:\"100%\",position:\"relative\"}} {...getRootProps()}>\r\n          <input  style={{height:\"100%\",width:\"100%\"}} {...getInputProps()} />\r\n          <p style={{position:\"absolute\",top:\"40%\"}}>Drag 'n' drop some files here, or click to select files</p>\r\n        </div>\r\n      </section>\r\n    )}\r\n    </Dropzone>\r\n    </Container>\r\n}"]},"metadata":{},"sourceType":"module"}