{"ast":null,"code":"import axios from 'axios';\n\nconst headersWithImage = () => {\n  const config = {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  };\n  return config;\n};\n\nexport async function sendFile(file, setResult, sendBuffer) {\n  let formData = new FormData();\n  formData.append('file', file);\n\n  try {\n    axios.post('http://localhost:3001/add', formData, headersWithImage()).then(res => {\n      if (res.status == 200) {\n        console.log(res.data);\n        setResult(res.data);\n      }\n    });\n  } catch (error) {\n    alert(\"nu a mers\");\n    console.log(error);\n  }\n}","map":{"version":3,"sources":["C:/Users/Adrian/Desktop/THE PROJECTS/OCR Online/ocr/src/Service/service.js"],"names":["axios","headersWithImage","config","headers","sendFile","file","setResult","sendBuffer","formData","FormData","append","post","then","res","status","console","log","data","error","alert"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AACA,MAAMC,gBAAgB,GAAC,MACvB;AACI,QAAMC,MAAM,GAAG;AACXC,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB;AADE,GAAf;AAGA,SAAOD,MAAP;AACH,CAND;;AAOA,OAAO,eAAeE,QAAf,CAAwBC,IAAxB,EAA6BC,SAA7B,EAAuCC,UAAvC,EACP;AACI,MAAIC,QAAQ,GAAC,IAAIC,QAAJ,EAAb;AACAD,EAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAuBL,IAAvB;;AACA,MAAI;AACJL,IAAAA,KAAK,CAACW,IAAN,CAAW,2BAAX,EAAuCH,QAAvC,EAAgDP,gBAAgB,EAAhE,EAAoEW,IAApE,CAAyEC,GAAG,IAAE;AACtE,UAAGA,GAAG,CAACC,MAAJ,IAAY,GAAf,EAAmB;AACfC,QAAAA,OAAO,CAACC,GAAR,CAAYH,GAAG,CAACI,IAAhB;AACAX,QAAAA,SAAS,CAACO,GAAG,CAACI,IAAL,CAAT;AACH;AACJ,KALL;AAMC,GAPD,CAOE,OAAOC,KAAP,EAAc;AACZC,IAAAA,KAAK,CAAC,WAAD,CAAL;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACH;AACJ","sourcesContent":["import axios from 'axios'\r\nconst headersWithImage=()=>\r\n{\r\n    const config = {\r\n        headers: { 'Content-Type': 'multipart/form-data'},\r\n      }\r\n    return config\r\n}\r\nexport async function sendFile(file,setResult,sendBuffer)\r\n{\r\n    let formData=new FormData();\r\n    formData.append('file',file);\r\n    try {\r\n    axios.post('http://localhost:3001/add',formData,headersWithImage()).then(res=>{\r\n            if(res.status==200){\r\n                console.log(res.data)\r\n                setResult(res.data)\r\n            }\r\n        })\r\n    } catch (error) {\r\n        alert(\"nu a mers\")\r\n        console.log(error)\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}