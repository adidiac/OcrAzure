[{"C:\\Users\\Adrian\\Desktop\\THE PROJECTS\\OCR Online\\ocr\\src\\index.js":"1","C:\\Users\\Adrian\\Desktop\\THE PROJECTS\\OCR Online\\ocr\\src\\App.js":"2","C:\\Users\\Adrian\\Desktop\\THE PROJECTS\\OCR Online\\ocr\\src\\Components\\Navbar.js":"3","C:\\Users\\Adrian\\Desktop\\THE PROJECTS\\OCR Online\\ocr\\src\\Components\\Logo.js":"4","C:\\Users\\Adrian\\Desktop\\THE PROJECTS\\OCR Online\\ocr\\src\\Components\\Home.js":"5","C:\\Users\\Adrian\\Desktop\\THE PROJECTS\\OCR Online\\ocr\\src\\Components\\DropzoneContainer.js":"6","C:\\Users\\Adrian\\Desktop\\THE PROJECTS\\OCR Online\\ocr\\src\\Service\\service.js":"7","C:\\Users\\Adrian\\Desktop\\THE PROJECTS\\OCR Online\\ocr\\src\\Components\\About.js":"8","C:\\Users\\Adrian\\Desktop\\THE PROJECTS\\OCR Online\\ocr\\src\\Components\\NotFound.js":"9"},{"size":334,"mtime":1626198484591,"results":"10","hashOfConfig":"11"},{"size":632,"mtime":1626614196357,"results":"12","hashOfConfig":"11"},{"size":743,"mtime":1626542074803,"results":"13","hashOfConfig":"11"},{"size":228,"mtime":1626193067165,"results":"14","hashOfConfig":"11"},{"size":1945,"mtime":1630072987480,"results":"15","hashOfConfig":"11"},{"size":1366,"mtime":1626610003360,"results":"16","hashOfConfig":"11"},{"size":874,"mtime":1626613983323,"results":"17","hashOfConfig":"11"},{"size":4131,"mtime":1630072867460,"results":"18","hashOfConfig":"11"},{"size":404,"mtime":1626614324069,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1durg8c",{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"C:\\Users\\Adrian\\Desktop\\THE PROJECTS\\OCR Online\\ocr\\src\\index.js",[],["44","45"],"C:\\Users\\Adrian\\Desktop\\THE PROJECTS\\OCR Online\\ocr\\src\\App.js",["46","47"],"import MyNavbar from \"./Components/Navbar\";\nimport Home from './Components/Home'\nimport About from \"./Components/About\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  useRouteMatch,\n  Route,\n} from \"react-router-dom\"\nimport NotFound from \"./Components/NotFound\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <MyNavbar></MyNavbar>\n      <Switch >\n        <Route exact path=\"/home\">\n            <Home />\n        </Route>\n        <Route exact path=\"/\">\n            <About></About>\n        </Route>\n        <Route>\n          <NotFound></NotFound>\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\Adrian\\Desktop\\THE PROJECTS\\OCR Online\\ocr\\src\\Components\\Navbar.js",[],"C:\\Users\\Adrian\\Desktop\\THE PROJECTS\\OCR Online\\ocr\\src\\Components\\Logo.js",["48"],"import LogoImage from './Logo.svg'\r\nexport default function Logo()\r\n{\r\n    return (\r\n        <img src={LogoImage} style={{border:\"2px solid white\",borderRadius:\"100%\",height:50,width:50}} class=\"grow\">\r\n        </img>\r\n    );\r\n}","C:\\Users\\Adrian\\Desktop\\THE PROJECTS\\OCR Online\\ocr\\src\\Components\\Home.js",["49"],"import { Container, Nav ,Row,Col,Image,Spinner} from \"react-bootstrap\";\r\nimport Arrow from '../Images/arrow.png'\r\nimport { useState } from \"react\";\r\nimport DropzoneContainer from \"./DropzoneContainer\";\r\nimport * as Icons from 'react-bootstrap-icons'\r\n\r\nexport default function Home()\r\n{\r\n    const [result, setResult] = useState(null);\r\n    const [bufferArray,setBuffer]=useState(null)\r\n    const copyToClipBoard=(event)=>{\r\n      let input = document.getElementById(\"result\");\r\n      event.preventDefault();\r\n      input.select();\r\n      document.execCommand(\"copy\");\r\n    }\r\n    const render=()=>{\r\n      if(!result && !bufferArray)\r\n      {\r\n        return <textarea id=\"result\" style={{width:\"100%\",height:\"100%\",textAlign:\"center\",backgroundColor:\"#053742\",color:\"#E8F0F2\",padding:10,border:\"1px solid white\",borderRadius:\"5\",margin:10}}>\r\n        Here will be you result and from where you can copy \r\n        </textarea>\r\n      }\r\n      if(!result && bufferArray)\r\n      {\r\n        return <Spinner animation=\"border\" style={{position:\"absolute\",top:\"40%\"}}/>\r\n      }\r\n      if(result)\r\n      {\r\n        return <textarea id=\"result\" style={{width:\"100%\",height:\"100%\",textAlign:\"center\",backgroundColor:\"#053742\",color:\"#E8F0F2\",padding:10,border:\"1px solid white\",borderRadius:\"5\",margin:10}}>\r\n          {result}\r\n        </textarea>\r\n      }\r\n      \r\n    }\r\n    return (\r\n        <Container >\r\n        <Row style={{marginTop:20}}>\r\n          <Col>\r\n            <DropzoneContainer setBuffer={setBuffer} setResult={setResult}></DropzoneContainer>\r\n          </Col>\r\n          <Col style={{textAlign:\"center\"}}>\r\n            <Image src={Arrow} style={{width:300,height:300}}></Image>\r\n          </Col>\r\n          <Col >\r\n          <Icons.Clipboard id=\"clipBoard\"  onClick={(event)=>{copyToClipBoard(event)}}></Icons.Clipboard>\r\n          {\r\n            render()\r\n          }\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n}","C:\\Users\\Adrian\\Desktop\\THE PROJECTS\\OCR Online\\ocr\\src\\Components\\DropzoneContainer.js",["50","51","52"],"import Dropzone from 'react-dropzone'\r\nimport React, {useCallback} from 'react'\r\nimport { Container,Image } from 'react-bootstrap'\r\nimport UploadImage from '../Images/upload.png'\r\nimport { sendFile } from '../Service/service'\r\nimport $ from 'jquery'\r\nimport * as jquery from 'jquery'\r\nexport default function DropzoneContainer({setBuffer,setResult})\r\n{\r\n    const onDrop = useCallback((acceptedFiles) => {\r\n        console.log(acceptedFiles)\r\n        acceptedFiles.forEach((file) => {\r\n          setResult(null)\r\n          setBuffer(\"ceva\");\r\n          sendFile(file,setResult,setBuffer)\r\n        })\r\n        \r\n      }, [])\r\n\r\n\r\n    return <Container style={{height:\"20rem\",width:\"20rem\",border:\"2px dotted white\",padding:20}}>\r\n    <Dropzone onDrop={onDrop}>\r\n    {\r\n      ({getRootProps, getInputProps}) => (\r\n      <section style={{height:\"100%\",width:\"100%\",textAlign:\"center\",border:\"2px solid white\"}}>\r\n        <div style={{height:\"100%\",width:\"100%\",position:\"relative\"}} {...getRootProps()}>\r\n          <Image src={UploadImage} style={{width:180,height:180}}></Image> \r\n          <input  style={{height:\"100%\",width:\"100%\"}} {...getInputProps()} />\r\n          <p style={{position:\"absolute\",top:\"40%\"}}>Drag and drop the pdf or the picture here, or click to select the file</p>\r\n        </div>\r\n      </section>\r\n    )}\r\n    </Dropzone>\r\n    </Container>\r\n}","C:\\Users\\Adrian\\Desktop\\THE PROJECTS\\OCR Online\\ocr\\src\\Service\\service.js",["53","54"],"import axios from 'axios'\r\nconst headersWithImage=()=>\r\n{\r\n    const config = {\r\n        headers: { 'Content-Type': 'multipart/form-data'},\r\n      }\r\n    return config\r\n}\r\nexport async function sendFile(file,setResult,setBuffer)\r\n{\r\n    let formData=new FormData();\r\n    formData.append('file',file);\r\n    try {\r\n    axios.post('http://localhost:3001/add',formData,headersWithImage()).then(res=>{\r\n            if(res.status==200){\r\n                if(res.data.statusCode==400)\r\n                {\r\n                    alert(res.data.body.error.message)\r\n                    setResult(null)\r\n                    setBuffer(null)\r\n                }\r\n                else{\r\n                setResult(res.data)\r\n                setBuffer(null)\r\n                }\r\n            }\r\n        })\r\n    } catch (error) {\r\n        alert(\"nu a mers\")\r\n        console.log(error)\r\n    }\r\n}\r\n","C:\\Users\\Adrian\\Desktop\\THE PROJECTS\\OCR Online\\ocr\\src\\Components\\About.js",[],"C:\\Users\\Adrian\\Desktop\\THE PROJECTS\\OCR Online\\ocr\\src\\Components\\NotFound.js",[],{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":5,"column":20,"nodeType":"61","messageId":"62","endLine":5,"endColumn":26},{"ruleId":"59","severity":1,"message":"63","line":7,"column":3,"nodeType":"61","messageId":"62","endLine":7,"endColumn":16},{"ruleId":"64","severity":1,"message":"65","line":5,"column":9,"nodeType":"66","endLine":5,"endColumn":117},{"ruleId":"59","severity":1,"message":"67","line":1,"column":21,"nodeType":"61","messageId":"62","endLine":1,"endColumn":24},{"ruleId":"59","severity":1,"message":"68","line":6,"column":8,"nodeType":"61","messageId":"62","endLine":6,"endColumn":9},{"ruleId":"59","severity":1,"message":"69","line":7,"column":13,"nodeType":"61","messageId":"62","endLine":7,"endColumn":19},{"ruleId":"70","severity":1,"message":"71","line":18,"column":10,"nodeType":"72","endLine":18,"endColumn":12,"suggestions":"73"},{"ruleId":"74","severity":1,"message":"75","line":15,"column":26,"nodeType":"76","messageId":"77","endLine":15,"endColumn":28},{"ruleId":"74","severity":1,"message":"75","line":16,"column":39,"nodeType":"76","messageId":"77","endLine":16,"endColumn":41},"no-native-reassign",["78"],"no-negated-in-lhs",["79"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'useRouteMatch' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Nav' is defined but never used.","'$' is defined but never used.","'jquery' is defined but never used.","react-hooks/exhaustive-deps","React Hook useCallback has missing dependencies: 'setBuffer' and 'setResult'. Either include them or remove the dependency array. If 'setResult' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["80"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"81","fix":"82"},"Update the dependencies array to be: [setBuffer, setResult]",{"range":"83","text":"84"},[620,622],"[setBuffer, setResult]"]